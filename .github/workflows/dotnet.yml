name: 'dotnet build'

on:
  push:
    branches:
      - '**'
  pull_request:
    types: [ closed ]

env:
  PRERELEASE_BRANCHES: experimental,alpha,beta,rc
  DOCKER_IMAGE_REGISTRY_PATH: ${{ secrets.RAAEDGE_LOGIN_SERVER }}/connectors-opcua
  COVERAGE_FOLDER: Coverage

jobs:
  ci:
    name: 'build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3

    - name: Add private Nuget feed
      run: dotnet nuget add source --username ${{ secrets.NUGET_GITHUB_PACKAGES_USERNAME }} --password ${{ secrets.NUGET_GITHUB_PACKAGES_TOKEN }} --store-password-in-clear-text --name "githubpackagesnuget" "https://nuget.pkg.github.com/RaaLabs/index.json"

    - name: Install dependencies
      run: dotnet restore --no-cache --verbosity normal
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test and report coverage
      run: dotnet test --configuration Release --no-build /p:CollectCoverage=true /p:CoverletOutput=${{ github.workspace }}/${{ env.COVERAGE_FOLDER }}/ /p:MergeWith=${{ github.workspace }}/${{ env.COVERAGE_FOLDER }}/coverage/ /p:CoverletOutputFormat=opencover

    - name: 'ACR login'
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.RAAEDGE_LOGIN_SERVER }}
        username: ${{ secrets.RAAEDGE_ACR_USERNAME }}
        password: ${{ secrets.RAAEDGE_ACR_PASSWORD }}

    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2
      with:
        prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}

    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ./Source/Dockerfile
        failure-threshold: error

    - name: Docker Build
      uses: docker/build-push-action@v6
      if: ${{ steps.context.outputs.should-publish == 'false' }}
      with:
        push: false
        no-cache: true
        context: .
        file: ./Source/Dockerfile
        build-args: |
          CONFIGURATION=Release
        secrets: |
          NUGET_GITHUB_PACKAGES_USERNAME=${{ secrets.NUGET_GITHUB_PACKAGES_USERNAME }}
          NUGET_GITHUB_PACKAGES_TOKEN=${{ secrets.NUGET_GITHUB_PACKAGES_TOKEN }}
        platforms: linux/amd64
        tags: ${{ env.DOCKER_IMAGE_REGISTRY_PATH }}:latest

    - name: Increment version
      id: increment-version
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/increment-version-action@v2
      with:
        version: ${{ steps.context.outputs.current-version }}
        release-type: ${{ steps.context.outputs.release-type }}

    - name: Docker push
      uses: docker/build-push-action@v6
      if: ${{ steps.context.outputs.should-publish == 'true' && inputs.IMAGE_NAME != '' }}
      with:
        push: true
        no-cache: true
        context: .
        file: ./Source/Dockerfile
        build-args: |
          CONFIGURATION=Release
        secrets: |
          NUGET_GITHUB_PACKAGES_USERNAME=${{ secrets.NUGET_GITHUB_PACKAGES_USERNAME }}
          NUGET_GITHUB_PACKAGES_TOKEN=${{ secrets.NUGET_GITHUB_PACKAGES_TOKEN }}
        platforms: linux/amd64
        tags: |
          ${{ env.DOCKER_IMAGE_REGISTRY_PATH }}:${{ steps.increment-version.outputs.next-version }}
          ${{ env.DOCKER_IMAGE_REGISTRY_PATH }}:latest

    - name: Docker logout
      if: always()
      run: |
        docker logout ${{ secrets.RAAEDGE_LOGIN_SERVER }}
        docker logout ${{ secrets.RAAEDGE_LOGIN_SERVER_2 }}

    - name: Create GitHub Release
      uses: dolittle/github-release-action@v2
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      with:
        version: ${{ steps.increment-version.outputs.next-version }}
        body: ${{ steps.context.outputs.pr-body }}

    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      current-version: ${{ steps.context.outputs.current-version }}
      release-type: ${{ steps.context.outputs.release-type }}
      version: ${{ steps.increment-version.outputs.next-version }}
